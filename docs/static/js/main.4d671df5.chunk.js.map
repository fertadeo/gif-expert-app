{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItems.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItems","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAGzB,EAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAGGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,MAOlB,SACI,uBACAO,KAAK,OACLC,MAAQT,EACRU,SArBkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAQF,GAHP,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVtB,kBAcdM,GAdc,4CAAH,sDCERO,EAAe,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,kCAAMA,EAAN,WCHCO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAItB,ECLwB,SAAEA,GAG1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBI,OAnBHC,qBAAW,WAENxB,EAASC,GACRwB,MAAM,SAAAd,GAELe,YAAW,WACPH,EAAS,CACTf,KAAMG,EACNU,SAAS,MAGV,UAIP,CAAEpB,IAIKqB,EDtBqBK,CAAc1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QASrB,OAEI,qCAEI,mCAAOpB,KAELoB,GAAW,mBAAGJ,UAAU,oCAAb,sBACjB,qBAAKA,UAAU,2CAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OAChB,cAAC,EAAD,eAEKA,GADEA,EAAIC,aEWPgB,EAnCM,WAGrB,MAAoCzC,mBAAS,CAAC,cAA9C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOE,OACE,qCACA,kDACA,cAAC,EAAD,CAAcA,cAAgBA,IAC9B,uBAIA,6BAEI2C,EAAWnB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAWA,GADLA,YCpBd6B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.4d671df5.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] =  useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value ); \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n\r\n        </form>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const  getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category )  }&limit=10&api_key=DbdP8XLjEPnp2Q2X8oWQLOux8NfjwdaG`;\r\n    const resp = await fetch ( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return { \r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n   return gifs; \r\n   \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItems = ( {title, url} ) => {\r\n\r\n    // console.log({id, title, url});\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn\">\r\n            <img src={ url} alt={ title} />\r\n            <p> { title } </p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItems } from './GifGridItems';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n   \r\n    \r\n    const { data:images, loading} = useFetchGifs( category ); \r\n\r\n    //  useEffect( () => {\r\n    //     getGifs( category)\r\n    //     .then( setImages); \r\n    // }, [category])\r\n\r\n \r\n\r\n    return (\r\n\r\n        <> \r\n        \r\n            <h3> { category }</h3>\r\n\r\n            { loading && <p className=\" animate__animated animate__flash\"> Loading</p> }\r\n        <div className=\"grids  animate__animated animate__fadeIn\">\r\n        \r\n            { \r\n            images.map( img => (\r\n           <GifGridItems\r\n            key={ img.id }\r\n            {...img} />\r\n            \r\n            ))\r\n            }\r\n            \r\n        \r\n        </div>\r\n        \r\n        \r\n        \r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n \r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n     useEffect( () => {\r\n\r\n          getGifs( category )\r\n          .then( img => {\r\n              \r\n            setTimeout(() => {\r\n                setstate({\r\n                data: img,\r\n                loading: false\r\n              });\r\n                \r\n            }, 3000);\r\n\r\n        })\r\n\r\n     }, [ category] )\r\n\r\n\r\n\r\n        return state; \r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n\r\nconst [categories, setCategories] = useState(['One Punch']);\r\n\r\n// const handleAdd = () => {\r\n   \r\n//     setCategories([...categories, 'Dragon Ball GT'])\r\n// }\r\n\r\n  return (\r\n    <>\r\n    <h2> Gif Expert App </h2>\r\n    <AddCategory  setCategories={ setCategories } />\r\n    <hr />\r\n\r\n    \r\n\r\n    <ol>\r\n        { \r\n        categories.map( category => (\r\n        <GifGrid \r\n        key={ category }\r\n        category={ category } \r\n            />\r\n        ))\r\n        }\r\n    </ol>\r\n\r\n</>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default GifExpertApp; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\n\r\n\r\n\r\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\r\n\r\n"],"sourceRoot":""}